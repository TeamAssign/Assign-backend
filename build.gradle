plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.2'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.assign'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springAiVersion', "1.0.0-M5")
}

dependencies {
    // Spring Boot
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.ai:spring-ai-openai-spring-boot-starter'

    // .env
    implementation 'io.github.cdimascio:dotenv-java:3.0.0'

    // Swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Auth0
    implementation 'com.okta.spring:okta-spring-boot-starter:3.0.6'

    // OAuth2
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'


    // jpa
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    //querydsl
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
    annotationProcessor "org.hibernate:hibernate-jpamodelgen:6.2.0.Final"

    // postgre
    runtimeOnly 'org.postgresql:postgresql'

    // MongoDB
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

    // Redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // h2
    runtimeOnly 'com.h2database:h2'

    //hibernate-vector
    implementation 'org.hibernate.orm:hibernate-vector:6.4.0.Final'

    // batch
    implementation 'org.springframework.boot:spring-boot-starter-batch'

    // AWS
    implementation 'io.awspring.cloud:spring-cloud-aws-starter-s3:3.0.0'

    // monitoring
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.micrometer:micrometer-registry-prometheus'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.ai:spring-ai-bom:${springAiVersion}"
    }
}
def querydslSrcDir = 'src/main/generated'

clean {
    delete file(querydslSrcDir)
}
tasks.withType(JavaCompile) {
    options.generatedSourceOutputDirectory = file(querydslSrcDir)
}

tasks.named('test') {
    useJUnitPlatform()
}