spring:
  application:
    name: assign-back
  config:

    #    import: classpath:/.env[.properties]‚Äù
    import: optional:classpath:.env[.properties]
  batch:
    job:
      enabled: false
    jdbc:
      initialize-schema: always
  scheduling:
    enable: true
  cloud:
    aws:
      credentials:
        access-key: ${AWS_ACCESS_KEY}
        secret-key: ${AWS_SECRET_KEY}
      s3:
        bucket: ${AWS_S3_BUCKET}
        default-profile-image: https://elice-assign-bucket.s3.ap-northeast-2.amazonaws.com/default_profile_image.jpeg
      region:
        static: ${AWS_S3_REGION}


  datasource:
    url: jdbc:postgresql://pgvectorDB:5432/assign
    username: ${POSTGRES_PGVECTOR_DB_USERNAME}
    password: ${POSTGRES_PGVECTOR_DB_PASSWORD}
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        format_sql: false
        jdbc:
          time_zone: Asia/Seoul
  data:
    mongodb:
      uri: ${MONGO_DB_URI}
      database: assign
      auto-index-creation: true
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}


  ai:
    openai:
      api-key: ${OPEN_AI_API_KEY}
      chat:
        options:
          model: gpt-4o-mini
      embedding:
        options:
          model: text-embedding-3-small
          dimensions: 256

springdoc:
  api-docs:
    enabled: true
    path: /v3/api-docs
  swagger-ui:
    enabled: true
    path: /swagger-ui.html
    disable-swagger-default-url: true
    display-request-duration: true
    operations-sorter: method
    tags-sorter: alpha

okta:
  oauth2:
    issuer: ${AUTH0_ISSUER}
    client-id: ${AUTH0_CLIENT_ID}
    client-secret: ${AUTH0_CLIENT_SECRET}
    audience: ${AUTH0_AUDIENCE}

kakao:
  api-key: ${KAKAO_API_KEY}

management:
  endpoints:
    web:
      exposure:
        include: prometheus